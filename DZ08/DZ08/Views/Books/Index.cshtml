@model DZ08.Models.BookGenreViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
<form asp-controller="Books" asp-action="Index" method="get">
    <div class="form-actions no-color mb-3">
        <div class="row">
            <div class="col-md-4">
                <label>Title/Author:</label>
                <input type="text" name="SearchString" value="@Model.SearchString"
                       placeholder="Search books, authors..." class="form-control" />
            </div>
            <div class="col-md-3">
                <label>Genre:</label>
                <select asp-for="BookGenre" asp-items="Model.Genres" class="form-control">
                    <option value="">All Genres</option>
                </select>
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <input type="submit" value="Filter" class="btn btn-primary me-2" />
                <a asp-action="Index" class="btn btn-secondary">Clear</a>
            </div>
        </div>
    </div>
</form>
<p>
    <a asp-action="Create" class="btn btn-sm btn-outline-success">Create New</a>
</p>
<table class="table table-striped">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Books[0].Title)</th>
            <th>Author</th>
            <th>@Html.DisplayNameFor(model => model.Books[0].Genre)</th>
            <th>@Html.DisplayNameFor(model => model.Books[0].Price)</th>
            <th>@Html.DisplayNameFor(model => model.Books[0].Rating)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Books)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>
                    @if (item.Author != null)
                    {
                        @($"{item.Author.FirstName} {item.Author.LastName}")
                    }
                    else
                    {
                        <span class="text-muted">Unknown Author</span>
                    }
                </td>
                <td>@Html.DisplayFor(modelItem => item.Genre)</td>
                <td>@Html.DisplayFor(modelItem => item.Price)</td>
                <td>
                    @for (int i = 1; i <= 5; i++)
                    {
                        if (i <= item.Rating)
                        {
                            <span class="text-warning">★</span>
                        }
                        else
                        {
                            <span class="text-muted">☆</span>
                        }
                    }
                    <small class="text-muted">(@item.Rating/5)</small>
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.BookID" class="btn btn-sm btn-outline-primary">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.BookID" class="btn btn-sm btn-outline-info">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.BookID" class="btn btn-sm btn-outline-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
